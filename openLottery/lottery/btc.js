// 
const { 
    app,
    dayjs,
    get  
} = require('../tool/app');
const schedule = require('node-schedule');
const { 
    contro_set,
    contro_sets,
    contro_get,
    contro_lpush,
    contro_pub
} = require('../tool/redis');
const { killBtc } = require('../tool/kill');
// 
const { getGameType } = require('../tool/gameTool');
// 
// const { dayRun } = require('../tool/gameOpt');
// 数组随机顺序
const randomsort = (a, b) => 
{
    return Math.random() > .5 ? -1 : 1;
}
// 
const two = async(code) => 
{
    let _code = code.split('');
    const one = [];
    for(var i=0,len=_code.length;i<len;i+=3)
    {
        if(i<60)
        {
            let _c = (parseInt(_code.slice(i,i+3).join(''),16)%80);
            one.push(_c);
        }
    }
    let number = one.sort((a,b)=>{return a-b});
    const result = await getGameType('btc', {number}); 
    // console.log(result);
    // 
    return {
        code,
        number,
        result
    }
}
//
const one = async(code) => 
{
    let _number = code.replace(/[^0-9]/ig, "").split('');
    let number = [];
    for (let i = 0; i < 20; i++) {
        let v = _number[i];
        let _i = (i + 1);
        number.push(parseInt(v) + _i);
    }
    // 
    const result = await getGameType('btc', {number});
    // console.log(result);
    // 
    return {
        code,
        number,
        result
    }
}
// 比特币
const get_new_btc = async() =>
{
    let d = await get('btc');
    if(!d) return '';
    // 
    const _n = 'lottery_btc_cache';
    const _old = await contro_get(_n) || {};
    //
    // let _old = {
    //     11: {},
    //     16: {},
    //     28: {},
    //     36: {}
    // };
    for (let i in d) 
    {
        const _di = await two(d[i]);
        for(let j in _di.result)
        {
            const _dj = _di.result[j];
            _old[j][_dj] = [
                _di.code,
                _di.number,
                _di.result
            ]
        }
    }
    //
    await contro_set(_n, _old);
};
// 进行拿奖
schedule.scheduleJob('*/20 * * * * *', async() => 
{
    await get_new_btc();
});
// // 进行开奖
let _start_time = '2018-02-01 12:13:00';
let openNum = [
    7,13,16,21,12,11,16,22,7,14,6,15,11,8,16,13,19,16,6,24,16,16,6,11,2,11,15,16,13,18,10,7,11,11,13,3,3,11,20,14,19,18,13,7,14,14,17,20,8,13,20,14,11,18,14,13,4,13,10,15,22,24,10,19,20,13,14,15,15,17,11,16,7,8,17,25,22,9,18,19,22,12,7,6,22,24,7,9,11,7,13,8,14,14,10,10,16,16,20,12,9,15,11,18,9,18,12,13,15,13,5,10,14,17,14,17,11,11,19,23,11,19,14,9,13,11,17,7,15,17,12,12,13,4,1,9,16,17,20,5,16,21,10,14,21,12,6,5,22,10,24,11,6,14,3,12,15,12,21,10,12,16,21,7,11,20,20,9,12,15,19,14,19,16,11,18,16,24,16,15,12,9,14,17,23,11,18,21,17,12,10,10,10,11,16,8,9,13,9,14,6,14,8,7,11,18,17,10,17,4,14,15,6,3,19,6,15,4,6,15,18,4,13,14,19,21,16,16,14,6,9,23,12,23,6,8,15,23,10,20,6,16,16,12,24,11,15,12,5,13,15,15,11,9,17,20,9,13,8,12,11,11,9,16,13,7,10,9,10,20,11,13,16,23,14,14,19,21,7,9,15,19,13,18,8,15,14,13,19,14,9,15,10,21,16,20,14,14,6,8,6,6,15,14,7,13,13,12,23,15,14,11,19,21,14,11,13,10,13,18,19,11,18,16,13,16,12,11,18,18,15,9,11,16,18,15,10,14,10,17,20,8,17,9,9,8,10,20,7,8,19,18,21,18,3,17,16,14,13,8,17,5,16,15,15,14,8,21,18,22,14,19,18,21,23,14,13,21,3,14,11,16,12,15,5,17,11,18,13,13,8,15,7,5,22,13,22,8,21,12,3,17,20,8,7,16,17,8,20,23,10,8,12,18,24,6,9,12,17,6,19,18,20,15,21,21,18,10,15,4,19,22,6,17,10,20,8,16,3,14,15,20,12,21,21,6,14,17,14,19,21,18,13,18,18,22,6,22,12,13,8,13,13,4,19,17,7,8,7,15,19,9,3,23,21,7,22,6,13,15,7,22,16,17,24,22,20,17,12,12,17,8,16,14,10,12,15,15,12,11,17,8,12,8,10,14,26,10,22,20,15,9,9,7,18,11,4,17,19,11,13,6,7,9,14,18,18,11,13,19,11,19,12,16,11,9,13,11,18,16,15,13,20,20,5,15,18,11,11,15,12,18,17,18,7,18,15,12,5,12,12,10,20,14,17,17,10,13,7,18,13,15,13,9,10,9,15,17,9,14,19,9,24,15,12,11,16,5,11,13,16,13,17,11,16,9,12,5,10,21,16,8,10,15,15,3,17,13,19,15,19,14,5,23,12,14,20,19,11,15,24,3,18,20,9,11,14,14,16,13,10,16,18,8,13,17,12,11,17,21,24,5,14,5,8,11,8,8,12,15,22,9,16,17,6,17,13,18,13,14,11,8,14,15,7,9,16,8,13,12,16,13,18,12,9,19,18,17,10,17,16,12,16,8,14,12,16,17,12,13,8,21,4,14,17,8,17,10,14,15,11,19,9,12,12,25,23,12,14,9,18,10,16,12,13,15,17,7,13,23,21,2,10,24,10,7,14,7,16,9,11,5,16,19,12,9,13,7,12,16,11,13,16,21,11,22,14,19,7,18,21,20,20,6,20,15,8,17,17,14,17,21,20,17,22,14,14,8,7,18,16,9,8,15,15,4,10,21,9,10,15,6,12,15,14,15,21,13,14,17,8,20,18,17,6,16,19,13,7,6,12,16,19,15,7,9,11,11,15,12,18,15,15,14,12,10,15,8,10,16,17,20,12,16,12,12,7,12,7,4,20,7,20,21,4,10,10,9,17,16,10,17,16,15,20,14,10,9,19,13,13,15,13,18,12,11,4,9,21,10,14,10,9,12,19,19,11,6,12,5,5,18,5,17,18,21,18,19,23,9,10,6,23,11,11,5,4,25,21,9,15,20,15,12,13,16,14,8,9,21,13,13,12,13,8,12,16,12,17,13,15,19,17,4,15,8,23,4,18,17,20,17,18,14,23,20,12,11,10,18,12,10,15,18,4,19,12,9,13,24,13,10,17,12,15,13,19,15,14,13,8,14,4,9,13,8,12,7,12,9,14,9,4,3,20,13,7,8,13,10,16,22,7,19,17,11,15,16,14,12,16,15,12,18,14,7,14,18,13,15,17,23,10,14,13,3,8,14,21,17,14,8,12,21,18,16,11,15,10,16,13,16,13,19,16,14,11,13,19,13,15,14,9,7,9,19,15,22,13,12,13,15,19,16,10,12,17,9,14,5,15,22,17,16,6,14,11,10,19,22,17,13,13,13,14,16,14,14,13,12,12,18,9,17,6,12,14,8,12,18,13,19,11,8,11,6,5,19,14,13,7,10,15,13,15,18,3,13,21,18,9,7,15,16,14,10,15,22,24,20,8,6,12,17,16,12,10,10,19,18,20,15,8,12,9,5,9,9,11,13,7,10,9,19,8,10,11,14,20,9,11,13,14,13,24,15,12,19,14,14,23,12,6,13,4,18,18,16,20,10,17,14,7,8,11,17,10,15,12,14,10,10,19,11,7,10,14,19,16,11,13,9,10,11,21,13,17,17,6,2,11,19,9,12,15,15,15,10,14,9,12,14,14,13,8,10,14,22,19,11,9,5,15,6,20,10,21,6,20,12,16,17,11,18,15,14,20,5,9,9,16,12,3,20,8,14,10,18,15,15,19,18,16,16,12,7,17,18,7,14,8,9,20,20,18,10,12,19,5,18,13,15,20,11,8,7,17,11,19,12,11,12,13,8,6,10,23,6
];
const oneLottery = async(peroids) => 
{
    const _cache = await contro_get('lottery_btc_cache');
    // 
    const _sys = await contro_get('lottery_btc_open_now');
    let _this = '';
    // console.log(_sys);
    try {
        _this = _cache[_sys.type][_sys.number];
    } catch (error) {
        
    }
    if(_this) return _this;
    //
    let _auto_number = await killBtc('btc', peroids);
    if (_auto_number) return _auto_number;
    //
    const _rand = openNum.sort(randomsort).sort(randomsort)[2];
    _this = _cache['28'][_rand];
    //
    return _this;
}
//
schedule.scheduleJob('0 * * * * *', async() => 
{
    let peroids = dayjs().diff(dayjs(_start_time), 'minutes');
    let openNumber = await oneLottery(peroids);
    const _data = [
        peroids, // peroids,
        dayjs().format('YYYY-MM-DD HH:mm')+':00', // time,
        openNumber[1], // number
        openNumber[0] // code
    ];
    // console.log(_data);
    await contro_set('game_list_btc', {
        peroids: _data[0],
        time: _data[1],
        number: _data[2],
        code: _data[3]
    });
    // 推送通知
    await contro_pub('lottery_open_data', JSON.stringify({
        category: 'btc',
        peroids: _data[0],
        time: _data[1],
        number: _data[2],
        code: _data[3]
    }));
    // 
    // // 清除设置
    await contro_sets('lottery_btc_open_now', ''); 
});